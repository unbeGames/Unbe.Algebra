    
    #region Mul
    
    /// <summary>Returns the {1} row vector result of a matrix multiplication between a {1} row vector and a {0} matrix.</summary>
    /// <param name="v">Left hand side argument of the matrix multiply.</param>
    /// <param name="m">Right hand side argument of the matrix multiply.</param>
    /// <returns>The computed vector-matrix multiplication.</returns>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static {1} mul({1} v, {0} m) {{
      return new {1}(csum(v * m.c0), csum(v * m.c1), csum(v * m.c2), csum(v * m.c3)); 
    }}

    /// <summary>Returns the {1} column vector result of a matrix multiplication between a {0} matrix and a {1} column vector.</summary>
    /// <param name="m">Left hand side argument of the matrix multiply.</param>
    /// <param name="v">Right hand side argument of the matrix multiply.</param>
    /// <returns>The computed matrix-vector multiplication.</returns>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static {1} mul({0} m, {1} v) {{
      return m.c0 * v.x + m.c1 * v.y + m.c2 * v.z + m.c3 * v.w; 
    }}

    /// <summary>Returns the {0} matrix result of a matrix multiplication between a {0} matrix and a {0} matrix.</summary>
    /// <param name="a">Left hand side argument of the matrix multiply.</param>
    /// <param name="b">Right hand side argument of the matrix multiply.</param>
    /// <returns>The computed matrix-matrix multiplication.</returns>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static {0} mul({0} a, {0} b) {{
      return new {0}(
        a.c0 * b.c0.x + a.c1 * b.c0.y + a.c2 * b.c0.z + a.c3 * b.c0.w,
        a.c0 * b.c1.x + a.c1 * b.c1.y + a.c2 * b.c1.z + a.c3 * b.c1.w,
        a.c0 * b.c2.x + a.c1 * b.c2.y + a.c2 * b.c2.z + a.c3 * b.c2.w,
        a.c0 * b.c3.x + a.c1 * b.c3.y + a.c2 * b.c3.z + a.c3 * b.c3.w
      );
    }}

    #endregion
