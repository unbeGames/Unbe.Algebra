//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Unbe.Algebra.CodeGen.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Unbe.Algebra.CodeGen.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         
        ///    
        ///    #region Multiplication
        ///    /// &lt;summary&gt;Returns the result of a componentwise multiplication operation on two {0} vectors.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;lhs&quot;&gt;Left hand side {0} to use to compute componentwise multiplication.&lt;/param&gt;
        ///    /// &lt;param name=&quot;rhs&quot;&gt;Right hand side {0} to use to compute componentwise multiplication.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} result of the componentwise multiplication.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {0 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseMathOperators {
            get {
                return ResourceManager.GetString("BaseMathOperators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Runtime.CompilerServices;
        ///using System.Runtime.Intrinsics;
        ///
        ///namespace Unbe.Algebra {{
        ///	public partial struct {0} {{{1}
        ///	}}
        ///
        ///	public static partial class Math {{{2}
        ///	}}
        ///}}
        ///.
        /// </summary>
        internal static string BaseTemplate {
            get {
                return ResourceManager.GetString("BaseTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    #region Bit Operators
        ///    /// &lt;summary&gt;Returns the result of a componentwise bitwise not operation on a {0} vector.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;val&quot;&gt;Value to use when computing the componentwise bitwise not.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} result of the componentwise bitwise not.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {0} operator ~ ({0} val) {{ return new {0} (~val.value); }}
        ///
        ///
        ///    /// &lt;summary&gt;Returns the result of a componentwise bitwise and opera [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BitOperators {
            get {
                return ResourceManager.GetString("BitOperators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		
        ///		#region Core Math
        ///		/// &lt;summary&gt;Returns the componentwise minimum of two vectors.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The first input value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The second input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise minimum of the two input values.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} min({0} x, {0} y) {{ return new {0}({1}.Min(x.value, y.value)); }}
        ///
        ///		/// &lt;summary&gt;Returns the componentwise maximum of two vectors.&lt;/summary&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CoreMath {
            get {
                return ResourceManager.GetString("CoreMath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns true if the {0} is equal to a given {0}, false otherwise.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;rhs&quot;&gt;Right hand side argument to compare equality with.&lt;/param&gt;
        ///    /// &lt;returns&gt;The result of the equality comparison.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public readonly bool Equals({0} other) {{
        ///      return value == other.value;
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns true if the {0} is equal to a given {0}, false otherwise.&lt;/summary&gt;
        ///    /// &lt;param n [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EqualsMethods {
            get {
                return ResourceManager.GetString("EqualsMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		
        ///		#region Floating Point Math
        ///		/// &lt;summary&gt;Returns the result of rounding each component of a vector value down to the nearest value less or equal to the original value.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise round down to nearest integral value of the input.&lt;/returns&gt; 
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} floor({0} v) {{ return new {0}({1}.Floor(v.value)); }}
        ///
        ///		/// &lt;summary&gt;Returns the result of rounding ea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FloatingPointMath {
            get {
                return ResourceManager.GetString("FloatingPointMath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///		/// &lt;summary&gt;Returns the result of a componentwise calculation of the smallest power of two greater than or equal to the input.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise smallest power of two greater than or equal to the input.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} ceilpow2({0} v) {{ 
        ///			v -= 1;
        ///      v |= v &gt;&gt; 1;
        ///      v |= v &gt;&gt; 2;
        ///      v |= v &gt;&gt; 4;
        ///      v |= v &gt;&gt; 8;
        ///      return v + 1;
        ///		}}
        ///.
        /// </summary>
        internal static string IntegralNumeric16 {
            get {
                return ResourceManager.GetString("IntegralNumeric16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///		/// &lt;summary&gt;Returns the result of a componentwise calculation of the smallest power of two greater than or equal to the input.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise smallest power of two greater than or equal to the input.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} ceilpow2({0} v) {{ 
        ///			v -= 1;
        ///      v |= v &gt;&gt; 1;
        ///      v |= v &gt;&gt; 2;
        ///      v |= v &gt;&gt; 4;
        ///      v |= v &gt;&gt; 8;
        ///      v |= v &gt;&gt; 16;
        ///      retur [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IntegralNumeric32 {
            get {
                return ResourceManager.GetString("IntegralNumeric32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///		/// &lt;summary&gt;Returns the result of a componentwise calculation of the smallest power of two greater than or equal to the input.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise smallest power of two greater than or equal to the input.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} ceilpow2({0} v) {{ 
        ///			v -= 1;
        ///      v |= v &gt;&gt; 1;
        ///      v |= v &gt;&gt; 2;
        ///      v |= v &gt;&gt; 4;
        ///      v |= v &gt;&gt; 8;
        ///      v |= v &gt;&gt; 16;
        ///      v |=  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IntegralNumeric64 {
            get {
                return ResourceManager.GetString("IntegralNumeric64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		
        ///		#region Integral Numerics Math
        ///		#endregion.
        /// </summary>
        internal static string IntegralNumericsMath {
            get {
                return ResourceManager.GetString("IntegralNumericsMath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		
        ///		#region Shift Operators
        ///		/// &lt;summary&gt;Returns the result of a componentwise left shift operation on an {0} vector by a number of bits specified by a single int.&lt;/summary&gt;
        ///		/// &lt;param name=&quot;v&quot;&gt;The vector to left shift.&lt;/param&gt;
        ///		/// &lt;param name=&quot;n&quot;&gt;The number of bits to left shift.&lt;/param&gt;
        ///		/// &lt;returns&gt;The result of the componentwise left shift.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} operator &lt;&lt; ({0} v, int n) {{ return new {0} ({1}.ShiftLeft(v.valu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ShiftOperators {
            get {
                return ResourceManager.GetString("ShiftOperators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Shuffles the vector.&lt;/summary&gt;    
        ///    public {0} {1} {{
        ///      [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///      readonly get {{ return new {0}({2}Ext.Shuffle(value, (byte)Shuffle{3}.{1})); }}
        ///      [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///      set {{ this.value = {2}Ext.Shuffle(value.value, (byte)Shuffle{3}.{1}); }}
        ///    }}
        ///.
        /// </summary>
        internal static string Shuffle {
            get {
                return ResourceManager.GetString("Shuffle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    #region Shuffles{0}    
        ///    #endregion
        ///.
        /// </summary>
        internal static string ShuffleBase {
            get {
                return ResourceManager.GetString("ShuffleBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Shuffles the vector.&lt;/summary&gt;    
        ///    public readonly {0} {1} {{
        ///      [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///      get {{ return new {0}({2}Ext.Shuffle(value, (byte)Shuffle{3}.{1})); }}
        ///    }}
        ///.
        /// </summary>
        internal static string ShuffleReadonly {
            get {
                return ResourceManager.GetString("ShuffleReadonly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///
        ///    #region Sign
        ///    /// &lt;summary&gt;Returns the componentwise sign of v. 1 for positive components, 0 for zero components and -1 for negative components.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise sign of the input.&lt;/returns&gt;    
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} sign({0} v) {{ return new {0}({1}Ext.Sign(v.value)); }}
        ///
        ///    /// &lt;summary&gt;Returns the componentwise absolute value of a vector.&lt;/summary&gt;
        ///    /// &lt;p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SignMath {
            get {
                return ResourceManager.GetString("SignMath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} matrix from four {1} vectors.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;c0&quot;&gt;The matrix column c0 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;c1&quot;&gt;The matrix column c1 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;c2&quot;&gt;The matrix column c2 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;c3&quot;&gt;The matrix column c3 will be set to this value.&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({1} c0, {1} c1, {1} c2, {1} c3){ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SimpleMatrix4Constructor {
            get {
                return ResourceManager.GetString("SimpleMatrix4Constructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from a {0} vector.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;vector&quot;&gt;The constructed vector&apos;s components will be set to this value.&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({0} vector) {{
        ///      value = vector.value;
        ///    }}
        ///
        ///    /// &lt;summary&gt;Constructs a {0} vector from {2}&lt;{1}&gt;.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;{2}&lt;{1}&gt; to convert to {0}&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({2}&lt;{1}&gt; v [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SimpleVectorConstructor {
            get {
                return ResourceManager.GetString("SimpleVectorConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///		/// &lt;summary&gt;{4} converts a single {2} value to a {0} vector by {1}assigning it to every component.&lt;/summary&gt;
        ///		/// &lt;param name=&quot;v&quot;&gt;{2} to convert to {0}&lt;/param&gt;
        ///		/// &lt;returns&gt;Converted value.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {3} operator {0}({2} v) {{ return new {0}(v); }}
        ///.
        /// </summary>
        internal static string SingleToVectorOperator {
            get {
                return ResourceManager.GetString("SingleToVectorOperator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from a single {3} value by converting it to {1} and assigning it to every component.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;{3} to convert to {0}&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({3} v) {{
        ///      value = {2}.Create(({1})v);
        ///    }}
        ///.
        /// </summary>
        internal static string SingleValueConstructor {
            get {
                return ResourceManager.GetString("SingleValueConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from four {1} values.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The constructed vector&apos;s x component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The constructed vector&apos;s y component will be set to this value.&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({1} x, {1} y) {{
        ///      value = {2}.Create(x, y);
        ///    }}    
        ///.
        /// </summary>
        internal static string Vector2Constructor {
            get {
                return ResourceManager.GetString("Vector2Constructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /// &lt;summary&gt;{0} zero value.&lt;/summary&gt;
        ///    public static readonly {0} zero;
        ///
        ///    /// &lt;summary&gt;x component of the vector.&lt;/summary&gt;
        ///    public {1} x {{ readonly get {{ return value[0]; }} set {{ this.value = this.value.WithElement(0, value); }} }}
        ///    /// &lt;summary&gt;y component of the vector.&lt;/summary&gt;
        ///    public {1} y {{ readonly get {{ return value[1]; }} set {{ this.value = this.value.WithElement(1, value); }} }}
        ///.
        /// </summary>
        internal static string Vector2Props {
            get {
                return ResourceManager.GetString("Vector2Props", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representation of the value.&lt;/returns&gt;
        ///    public readonly string ToString(string format, IFormatProvider formatProvider) {{
        ///      return string.Format(&quot;{0}({{0}}, {{1}}&quot;, x.ToString(format, formatProvider), y.ToString(format, formatProvider));
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representation of the value.&lt;/returns&gt;
        ///    [MethodImpl( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Vector2StringMethods {
            get {
                return ResourceManager.GetString("Vector2StringMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from four {1} values.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The constructed vector&apos;s x component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The constructed vector&apos;s y component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;z&quot;&gt;The constructed vector&apos;s z component will be set to this value.&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({1} x, {1} y, {1} z) {{
        ///      value = {2}.Create(x, y, z, 0);
        ///    }} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Vector3Constructor {
            get {
                return ResourceManager.GetString("Vector3Constructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /// &lt;summary&gt;{0} zero value.&lt;/summary&gt;
        ///    public static readonly {0} zero;
        ///
        ///    /// &lt;summary&gt;x component of the vector.&lt;/summary&gt;
        ///    public {1} x {{ readonly get {{ return value[0]; }} set {{ this.value = this.value.WithElement(0, value); }} }}
        ///    /// &lt;summary&gt;y component of the vector.&lt;/summary&gt;
        ///    public {1} y {{ readonly get {{ return value[1]; }} set {{ this.value = this.value.WithElement(1, value); }} }}
        ///    /// &lt;summary&gt;z component of the vector.&lt;/summary&gt;
        ///    public {1} z {{ readonly  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Vector3Props {
            get {
                return ResourceManager.GetString("Vector3Props", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representation of the value.&lt;/returns&gt;
        ///    public readonly string ToString(string format, IFormatProvider formatProvider) {{
        ///      return string.Format(&quot;{0}({{0}}, {{1}}, {{2}}&quot;, x.ToString(format, formatProvider), y.ToString(format, formatProvider), z.ToString(format, formatProvider));
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representatio [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Vector3StringMethods {
            get {
                return ResourceManager.GetString("Vector3StringMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from four {1} values.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The constructed vector&apos;s x component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The constructed vector&apos;s y component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;z&quot;&gt;The constructed vector&apos;s z component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;w&quot;&gt;The constructed vector&apos;s w component will be set to this value.&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.Aggressive [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Vector4Constructor {
            get {
                return ResourceManager.GetString("Vector4Constructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    /// &lt;summary&gt;Returns a {0} vector constructed from four {1} values.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The constructed vector&apos;s x component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The constructed vector&apos;s y component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;z&quot;&gt;The constructed vector&apos;s z component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;w&quot;&gt;The constructed vector&apos;s w component will be set to this value.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} constructed from a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Vector4Factory {
            get {
                return ResourceManager.GetString("Vector4Factory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /// &lt;summary&gt;{0} zero value.&lt;/summary&gt;
        ///    public static readonly {0} zero;
        ///
        ///    /// &lt;summary&gt;x component of the vector.&lt;/summary&gt;
        ///    public {1} x {{ readonly get {{ return value[0]; }} set {{ this.value = this.value.WithElement(0, value); }} }}
        ///    /// &lt;summary&gt;y component of the vector.&lt;/summary&gt;
        ///    public {1} y {{ readonly get {{ return value[1]; }} set {{ this.value = this.value.WithElement(1, value); }} }}
        ///    /// &lt;summary&gt;z component of the vector.&lt;/summary&gt;
        ///    public {1} z {{ readonly  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Vector4Props {
            get {
                return ResourceManager.GetString("Vector4Props", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representation of the value.&lt;/returns&gt;
        ///    public readonly string ToString(string format, IFormatProvider formatProvider) {{
        ///      return string.Format(&quot;{0}({{0}}, {{1}}, {{2}}, {{3}})&quot;, x.ToString(format, formatProvider), y.ToString(format, formatProvider), z.ToString(format, formatProvider), w.ToString(format, formatProvider));
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/sum [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Vector4StringMethods {
            get {
                return ResourceManager.GetString("Vector4StringMethods", resourceCulture);
            }
        }
    }
}
