//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Unbe.Algebra.CodeGen.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Unbe.Algebra.CodeGen.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    #region Multiplication
        ///
        ///    /// &lt;summary&gt;Returns the result of a componentwise multiplication operation on two {0} matrices.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;lhs&quot;&gt;Left hand side {0} to use to compute componentwise multiplication.&lt;/param&gt;
        ///    /// &lt;param name=&quot;rhs&quot;&gt;Right hand side {0} to use to compute componentwise multiplication.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} result of the componentwise multiplication.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {0} opera [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseMathOperatorsMatrix3 {
            get {
                return ResourceManager.GetString("BaseMathOperatorsMatrix3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    #region Multiplication
        ///
        ///    /// &lt;summary&gt;Returns the result of a componentwise multiplication operation on two {0} matrices.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;lhs&quot;&gt;Left hand side {0} to use to compute componentwise multiplication.&lt;/param&gt;
        ///    /// &lt;param name=&quot;rhs&quot;&gt;Right hand side {0} to use to compute componentwise multiplication.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} result of the componentwise multiplication.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {0} opera [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseMathOperatorsMatrix4 {
            get {
                return ResourceManager.GetString("BaseMathOperatorsMatrix4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         
        ///    #region Multiplication
        ///
        ///    /// &lt;summary&gt;Returns the result of a componentwise multiplication operation on two {0} vectors.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;lhs&quot;&gt;Left hand side {0} to use to compute componentwise multiplication.&lt;/param&gt;
        ///    /// &lt;param name=&quot;rhs&quot;&gt;Right hand side {0} to use to compute componentwise multiplication.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} result of the componentwise multiplication.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {0} op [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseMathOperatorsVector {
            get {
                return ResourceManager.GetString("BaseMathOperatorsVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Runtime.CompilerServices;
        ///using System.Runtime.Intrinsics;
        ///using System.Numerics;
        ///
        ///namespace Unbe.Algebra {{
        ///	public partial struct {0} {{{1}
        ///	}}
        ///
        ///	public static partial class Math {{{2}
        ///	}}
        ///}}
        ///.
        /// </summary>
        internal static string BaseTemplate {
            get {
                return ResourceManager.GetString("BaseTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    #region Bit Operators 
        ///
        ///    /// &lt;summary&gt;Returns the result of a componentwise bitwise not operation on a {0} vector.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;val&quot;&gt;Value to use when computing the componentwise bitwise not.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} result of the componentwise bitwise not.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {0} operator ~ ({0} val) {{ return new {0}(~val.value); }}
        ///
        ///
        ///    /// &lt;summary&gt;Returns the result of a componentwise bitwise and ope [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BitOperatorsVector {
            get {
                return ResourceManager.GetString("BitOperatorsVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    #region Equality and Bit Operators
        ///
        ///    /// &lt;summary&gt;Returns the result of a componentwise equality operation on two {0} vectors.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;lhs&quot;&gt;Left hand side {0} to use to compute componentwise equality.&lt;/param&gt;
        ///    /// &lt;param name=&quot;rhs&quot;&gt;Right hand side {0} to use to compute componentwise equality.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} result of the componentwise equality.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {0} operator == ({0} lhs,  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BoolBitOperators {
            get {
                return ResourceManager.GetString("BoolBitOperators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		
        ///		#region Boolean Math
        ///
        ///		/// &lt;summary&gt;The selection between falseValue and trueValue according to bool test.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;falseValue&quot;&gt;Value to use if test is false.&lt;/param&gt;
        ///    /// &lt;param name=&quot;trueValue&quot;&gt;Value to use if test is true.&lt;/param&gt;
        ///    /// &lt;param name=&quot;test&quot;&gt;Bool value to choose between falseValue and trueValue.&lt;/param&gt;
        ///    /// &lt;returns&gt;Returns trueValue if test is true, falseValue otherwise.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public st [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BooleanMath {
            get {
                return ResourceManager.GetString("BooleanMath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;{0} false value.&lt;/summary&gt;
        ///    public static readonly {0} True = new {0}(true);
        ///    
        ///    /// &lt;summary&gt;{0} false value.&lt;/summary&gt;
        ///    public static readonly {0} False = new {0}(false);
        ///.
        /// </summary>
        internal static string BooleanProps {
            get {
                return ResourceManager.GetString("BooleanProps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from four {1} values.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The constructed vector&apos;s x component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The constructed vector&apos;s y component will be set to this value.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} constructed from arguments.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({1} x, {1} y) {{
        ///      value = {2}.Create(x, y);
        ///    }}    
        ///
        ///    /// &lt;summary&gt;Constructs a {0} vector f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConstructorVector2 {
            get {
                return ResourceManager.GetString("ConstructorVector2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from four {1} values.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The constructed vector&apos;s x component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The constructed vector&apos;s y component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;z&quot;&gt;The constructed vector&apos;s z component will be set to this value.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} constructed from arguments.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({1} x, {1} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConstructorVector3 {
            get {
                return ResourceManager.GetString("ConstructorVector3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from four {1} values.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The constructed vector&apos;s x component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The constructed vector&apos;s y component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;z&quot;&gt;The constructed vector&apos;s z component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;w&quot;&gt;The constructed vector&apos;s w component will be set to this value.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} constructed from argume [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConstructorVector4 {
            get {
                return ResourceManager.GetString("ConstructorVector4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		
        ///		#region Core Math
        ///
        ///		/// &lt;summary&gt;Returns the horizontal sum of components of a vector.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;The vector to use when computing the horizontal sum.&lt;/param&gt;
        ///    /// &lt;returns&gt;The horizontal sum of of components of the vector.&lt;/returns&gt;
        ///		public static {2} csum({0} v) {{ return {1}.Sum(v.value); }}
        ///
        ///		/// &lt;summary&gt;Returns the result of a componentwise multiply-add operation (a * b + c) on 3 {0} vectors.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;mulA&quot;&gt;First value to multiply.&lt;/para [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CoreMath {
            get {
                return ResourceManager.GetString("CoreMath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    #region Equality Operators
        ///    
        ///    /// &lt;summary&gt;Returns the result of a componentwise less than operation on two {0} vectors.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;lhs&quot;&gt;Left hand side {0} to use to compute componentwise less than.&lt;/param&gt;
        ///    /// &lt;param name=&quot;rhs&quot;&gt;Right hand side {0} to use to compute componentwise less than.&lt;/param&gt;
        ///    /// &lt;returns&gt;Bool{3} result of the componentwise less than.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static Bool{3} operator &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EqualityOperatorsVector {
            get {
                return ResourceManager.GetString("EqualityOperatorsVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns true if the {0} is equal to a given {0}, false otherwise.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;rhs&quot;&gt;Right hand side argument to compare equality with.&lt;/param&gt;
        ///    /// &lt;returns&gt;The result of the equality comparison.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public readonly bool Equals({0} other) {{
        ///      return c0.Equals(other.c0) &amp;&amp; c1.Equals(other.c1);
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns true if the {0} is equal to a given {0}, false otherwise.&lt;/summ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EqualsMethodsMatrix2 {
            get {
                return ResourceManager.GetString("EqualsMethodsMatrix2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns true if the {0} is equal to a given {0}, false otherwise.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;rhs&quot;&gt;Right hand side argument to compare equality with.&lt;/param&gt;
        ///    /// &lt;returns&gt;The result of the equality comparison.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public readonly bool Equals({0} other) {{
        ///      return c0.Equals(other.c0) &amp;&amp; c1.Equals(other.c1) &amp;&amp; c2.Equals(other.c2);
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns true if the {0} is equal to a given {0}, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EqualsMethodsMatrix3 {
            get {
                return ResourceManager.GetString("EqualsMethodsMatrix3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns true if the {0} is equal to a given {0}, false otherwise.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;rhs&quot;&gt;Right hand side argument to compare equality with.&lt;/param&gt;
        ///    /// &lt;returns&gt;The result of the equality comparison.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public readonly bool Equals({0} other) {{
        ///      return c0.Equals(other.c0) &amp;&amp; c1.Equals(other.c1) &amp;&amp; c2.Equals(other.c2) &amp;&amp; c3.Equals(other.c3);
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns true if the {0} i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EqualsMethodsMatrix4 {
            get {
                return ResourceManager.GetString("EqualsMethodsMatrix4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns true if the {0} is equal to a given {0}, false otherwise.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;rhs&quot;&gt;Right hand side argument to compare equality with.&lt;/param&gt;
        ///    /// &lt;returns&gt;The result of the equality comparison.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public readonly bool Equals({0} other) {{
        ///      return value.Equals(other.value);
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns true if the {0} is equal to a given {0}, false otherwise.&lt;/summary&gt;
        ///    /// &lt;pa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EqualsMethodsVector {
            get {
                return ResourceManager.GetString("EqualsMethodsVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns a {0} vector constructed from a single {2} value.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;{1} to convert to {0}&lt;/param&gt;
        ///    /// &lt;returns&gt;Converted value.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {0} {1}{3}({2} v) {{ return new {0}(v); }}
        ///.
        /// </summary>
        internal static string FactoryVector {
            get {
                return ResourceManager.GetString("FactoryVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    /// &lt;summary&gt;Returns a {0} vector constructed from two {1} values.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The constructed vector&apos;s x component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The constructed vector&apos;s y component will be set to this value.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} constructed from arguments.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {0} {1}{3}({1} x, {1} y) {{ return new {0}(x, y); }}   
        ///
        ///    /// &lt;summary&gt;Returns a {0} vector con [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FactoryVector2 {
            get {
                return ResourceManager.GetString("FactoryVector2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    /// &lt;summary&gt;Returns a {0} vector constructed from three {1} values.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The constructed vector&apos;s x component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The constructed vector&apos;s y component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;z&quot;&gt;The constructed vector&apos;s z component will be set to this value.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} constructed from arguments.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static { [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FactoryVector3 {
            get {
                return ResourceManager.GetString("FactoryVector3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    /// &lt;summary&gt;Returns a {0} vector constructed from four {1} values.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The constructed vector&apos;s x component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The constructed vector&apos;s y component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;z&quot;&gt;The constructed vector&apos;s z component will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;w&quot;&gt;The constructed vector&apos;s w component will be set to this value.&lt;/param&gt;
        ///    /// &lt;returns&gt;{0} constructed from a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FactoryVector4 {
            get {
                return ResourceManager.GetString("FactoryVector4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		
        ///		#region Floating Point Math
        ///		/// &lt;summary&gt;Returns the result of rounding each component of a vector value down to the nearest value less or equal to the original value.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise round down to nearest integral value of the input.&lt;/returns&gt; 
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} floor({0} v) {{ return new {0}({1}.Floor(v.value)); }}
        ///
        ///		/// &lt;summary&gt;Returns the result of rounding ea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FloatingPointMath {
            get {
                return ResourceManager.GetString("FloatingPointMath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///		/// &lt;summary&gt;Returns the result of a componentwise calculation of the smallest power of two greater than or equal to the input.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise smallest power of two greater than or equal to the input.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} ceilpow2({0} v) {{ 
        ///			v -= 1;
        ///      v |= v &gt;&gt; 1;
        ///      v |= v &gt;&gt; 2;
        ///      v |= v &gt;&gt; 4;
        ///      v |= v &gt;&gt; 8;
        ///      return v + 1;
        ///		}}
        ///.
        /// </summary>
        internal static string IntegralNumeric16 {
            get {
                return ResourceManager.GetString("IntegralNumeric16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///		/// &lt;summary&gt;Returns the result of a componentwise calculation of the smallest power of two greater than or equal to the input.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise smallest power of two greater than or equal to the input.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} ceilpow2({0} v) {{ 
        ///			v -= 1;
        ///      v |= v &gt;&gt; 1;
        ///      v |= v &gt;&gt; 2;
        ///      v |= v &gt;&gt; 4;
        ///      v |= v &gt;&gt; 8;
        ///      v |= v &gt;&gt; 16;
        ///      ret [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IntegralNumeric32 {
            get {
                return ResourceManager.GetString("IntegralNumeric32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///		/// &lt;summary&gt;Returns the result of a componentwise calculation of the smallest power of two greater than or equal to the input.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise smallest power of two greater than or equal to the input.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} ceilpow2({0} v) {{ 
        ///			v -= 1;
        ///      v |= v &gt;&gt; 1;
        ///      v |= v &gt;&gt; 2;
        ///      v |= v &gt;&gt; 4;
        ///      v |= v &gt;&gt; 8;
        ///      v |= v &gt;&gt; 16;
        ///      v | [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IntegralNumeric64 {
            get {
                return ResourceManager.GetString("IntegralNumeric64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		
        ///		#region Integral Numerics Math
        ///		#endregion
        ///.
        /// </summary>
        internal static string IntegralNumericsMath {
            get {
                return ResourceManager.GetString("IntegralNumericsMath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns the {1}{2} element at a specified index.&lt;/summary&gt;
        ///    public unsafe ref {1}{2} this[int index] {{
        ///      get {{
        ///  #if !DISABLE_SAFETY_CHECKS
        ///        if ((uint)index &gt;= {3})
        ///          throw new System.ArgumentException(&quot;index must be between [0...{3})&quot;);
        ///  #endif
        ///        fixed ({0}* array = &amp;this) {{ return ref (({1}{2}*)array)[index]; }}
        ///      }}
        ///    }}
        ///.
        /// </summary>
        internal static string MatrixIndexer {
            get {
                return ResourceManager.GetString("MatrixIndexer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    #region Mul
        ///    
        ///    /// &lt;summary&gt;Returns the {1} row vector result of a matrix multiplication between a {1} row vector and a {0} matrix.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;a&quot;&gt;Left hand side argument of the matrix multiply.&lt;/param&gt;
        ///    /// &lt;param name=&quot;b&quot;&gt;Right hand side argument of the matrix multiply.&lt;/param&gt;
        ///    /// &lt;returns&gt;The computed vector-matrix multiplication.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {1} mul({1} v, {0} m) {{
        ///      return new  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MulMatrix3 {
            get {
                return ResourceManager.GetString("MulMatrix3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    #region Mul
        ///    
        ///    /// &lt;summary&gt;Returns the {1} row vector result of a matrix multiplication between a {1} row vector and a {0} matrix.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;Left hand side argument of the matrix multiply.&lt;/param&gt;
        ///    /// &lt;param name=&quot;m&quot;&gt;Right hand side argument of the matrix multiply.&lt;/param&gt;
        ///    /// &lt;returns&gt;The computed vector-matrix multiplication.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {1} mul({1} v, {0} m) {{
        ///      return new  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MulMatrix4 {
            get {
                return ResourceManager.GetString("MulMatrix4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		
        ///		#region Vector Operations Floating Point
        ///
        ///		/// &lt;summary&gt;Returns a normalized version of the vector v by scaling it by 1 / length(x).&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;Vector to normalize.&lt;/param&gt;
        ///    /// &lt;returns&gt;The normalized vector.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} normalize({0} v) {{ return rsqrt(dot(v, v)) * v; }}
        ///
        ///    /// &lt;summary&gt;
        ///    /// Returns a safe normalized version of the {0} vector v by scaling it by 1 / length(v).
        ///    /// Ret [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OperationsFloatingPointVector {
            get {
                return ResourceManager.GetString("OperationsFloatingPointVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		
        ///		#region Vector Operations
        ///
        ///    /// &lt;summary&gt;Returns the dot product of two vectors.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;x&quot;&gt;The first vector.&lt;/param&gt;
        ///    /// &lt;param name=&quot;y&quot;&gt;The second vector.&lt;/param&gt;
        ///    /// &lt;returns&gt;The dot product of two vectors.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {2} dot({0} x, {0} y) {{ return {1}.Dot(x.value, y.value); }}
        ///
        ///		#endregion
        ///.
        /// </summary>
        internal static string OperationsVector {
            get {
                return ResourceManager.GetString("OperationsVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to      
        ///    /// &lt;summary&gt;Return the {0} transpose of a {0} matrix.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;m&quot;&gt;Value to transpose.&lt;/param&gt;
        ///    /// &lt;returns&gt;Transposed value.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {0} transpose({0} m) {{
        ///      return new {0}(
        ///        m.c0.x, m.c0.y, m.c0.z,
        ///        m.c1.x, m.c1.y, m.c1.z,
        ///        m.c2.x, m.c2.y, m.c2.z
        ///      );
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns the {0} full inverse of a {0} matrix.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;m&quot;&gt;Matrix to in [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OperatorsMatrix3x3 {
            get {
                return ResourceManager.GetString("OperatorsMatrix3x3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to      
        ///    /// &lt;summary&gt;Return the {0} transpose of a {0} matrix.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;m&quot;&gt;Value to transpose.&lt;/param&gt;
        ///    /// &lt;returns&gt;Transposed value.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {0} transpose({0} m) {{
        ///      // x1, y1, x2, y2
        ///      var xAndY1 = shuffle(m.c0, m.c1, Shuffle4.xyxy);
        ///
        ///      // z1, w1, z2, w2
        ///      var zAndW1 = shuffle(m.c0, m.c1, Shuffle4.zwzw);
        ///
        ///      // x3, y3, x4, y4
        ///      var xAndY2 = shuffle(m.c2, m.c3, Shuffle4.xyxy);
        ///
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OperatorsMatrix4x4 {
            get {
                return ResourceManager.GetString("OperatorsMatrix4x4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to      
        ///    /// &lt;summary&gt;Return the result of transforming a {1}3 point by a {0} matrix&lt;/summary&gt;
        ///    /// &lt;param name =&quot;m&quot;&gt;Left hand side matrix argument that specifies the transformation.&lt;/param&gt;
        ///    /// &lt;param name =&quot;v&quot;&gt;Right hand side point argument to be transformed.&lt;/param&gt;
        ///    /// &lt;returns&gt;The transformed point.&lt;/returns&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public static {1}3 transform({0} m, {1}3 v) {{
        ///      return (m.c0 * v.x + m.c1 * v.y + m.c2 * v.z + m.c3).xyz;
        ///    }}
        ///    
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OperatorsMatrix4x4Additional {
            get {
                return ResourceManager.GetString("OperatorsMatrix4x4Additional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;{0} zero value.&lt;/summary&gt;
        ///    public static readonly {0} Zero;
        ///
        ///    /// &lt;summary&gt;{0} min value.&lt;/summary&gt;
        ///    public static readonly {0} MinValue = new {0}({1}.MinValue);
        ///
        ///    /// &lt;summary&gt;{0} max value.&lt;/summary&gt;
        ///    public static readonly {0} MaxValue = new {0}({1}.MaxValue);
        ///
        ///    /// &lt;inheritdoc cref=&quot;IMinMaxValue{{TSelf}}.MinValue&quot; /&gt;
        ///    static {0} IMinMaxValue&lt;{0}&gt;.MinValue =&gt; MinValue;
        ///
        ///    /// &lt;inheritdoc cref=&quot;IMinMaxValue{{TSelf}}.MaxValue&quot; /&gt;
        ///    static {0} IMi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropertiesVector {
            get {
                return ResourceManager.GetString("PropertiesVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;{0} identity.&lt;/summary&gt;
        ///    public static readonly {0} Identity = new {0}(1, 0, 0,   0, 1, 0,   0, 0, 1);
        ///
        ///    /// &lt;summary&gt;{0} identity.&lt;/summary&gt;
        ///    public static readonly {0} Zero = new {0}();
        ///.
        /// </summary>
        internal static string PropsMatrix3 {
            get {
                return ResourceManager.GetString("PropsMatrix3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;{0} identity.&lt;/summary&gt;
        ///    public static readonly {0} Identity = new {0}(1, 0, 0, 0,   0, 1, 0, 0,   0, 0, 1, 0,   0, 0, 0, 1);
        ///
        ///    /// &lt;summary&gt;{0} identity.&lt;/summary&gt;
        ///    public static readonly {0} Zero = new {0}();
        ///.
        /// </summary>
        internal static string PropsMatrix4 {
            get {
                return ResourceManager.GetString("PropsMatrix4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    /// &lt;summary&gt;x component of the vector.&lt;/summary&gt;
        ///    public {1} x {{ readonly get {{ return this[0]; }} set {{ this[0] = value; }} }}
        ///    /// &lt;summary&gt;y component of the vector.&lt;/summary&gt;
        ///    public {1} y {{ readonly get {{ return this[1]; }} set {{ this[1] = value; }} }}
        ///
        ///    /// &lt;summary&gt;Number of elements in the vector.&lt;/summary&gt;
        ///    public readonly int count {{ get {{ return 2; }} }}
        ///.
        /// </summary>
        internal static string PropsVector2 {
            get {
                return ResourceManager.GetString("PropsVector2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    /// &lt;summary&gt;x component of the vector.&lt;/summary&gt;
        ///    public {1} x {{ readonly get {{ return this[0]; }} set {{ this[0] = value; }} }}
        ///    /// &lt;summary&gt;y component of the vector.&lt;/summary&gt;
        ///    public {1} y {{ readonly get {{ return this[1]; }} set {{ this[1] = value; }} }}
        ///    /// &lt;summary&gt;z component of the vector.&lt;/summary&gt;
        ///    public {1} z {{ readonly get {{ return this[2]; }} set {{ this[2] = value; }} }}
        ///
        ///    /// &lt;summary&gt;Number of elements in the vector.&lt;/summary&gt;
        ///    public readonly int [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropsVector3 {
            get {
                return ResourceManager.GetString("PropsVector3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    /// &lt;summary&gt;x component of the vector.&lt;/summary&gt;
        ///    public {1} x {{ readonly get {{ return this[0]; }} set {{ this[0] = value; }} }}
        ///    /// &lt;summary&gt;y component of the vector.&lt;/summary&gt;
        ///    public {1} y {{ readonly get {{ return this[1]; }} set {{ this[1] = value; }} }}
        ///    /// &lt;summary&gt;z component of the vector.&lt;/summary&gt;
        ///    public {1} z {{ readonly get {{ return this[2]; }} set {{ this[2] = value; }} }}
        ///    /// &lt;summary&gt;w component of the vector.&lt;/summary&gt;
        ///    public {1} w {{ readonly get [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropsVector4 {
            get {
                return ResourceManager.GetString("PropsVector4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		
        ///		#region Shift Operators
        ///		/// &lt;summary&gt;Returns the result of a componentwise left shift operation on an {0} vector by a number of bits specified by a single int.&lt;/summary&gt;
        ///		/// &lt;param name=&quot;v&quot;&gt;The vector to left shift.&lt;/param&gt;
        ///		/// &lt;param name=&quot;n&quot;&gt;The number of bits to left shift.&lt;/param&gt;
        ///		/// &lt;returns&gt;The result of the componentwise left shift.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} operator &lt;&lt; ({0} v, int n) {{ return new {0} ({1}.ShiftLeft(v.valu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ShiftOperatorsVector {
            get {
                return ResourceManager.GetString("ShiftOperatorsVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Shuffles the vector.&lt;/summary&gt;    
        ///    public {0} {1} {{
        ///      [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///      readonly get {{ return new {0}({2}Ext.Shuffle(value, (byte)Shuffle{3}.{1})); }}
        ///      [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///      set {{ this.value = {2}Ext.Shuffle(value.value, (byte)Shuffle{3}.{4}); }}
        ///    }}
        ///.
        /// </summary>
        internal static string Shuffle {
            get {
                return ResourceManager.GetString("Shuffle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    #region Shuffles
        ///    {0} 
        ///    #endregion
        ///.
        /// </summary>
        internal static string ShuffleBase {
            get {
                return ResourceManager.GetString("ShuffleBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///		/// &lt;summary&gt;Returns the result of specified shuffling of the components from two {0} vectors into an {0} vector.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;left&quot;&gt;int4 to use as the left argument of the shuffle operation.&lt;/param&gt;
        ///    /// &lt;param name=&quot;right&quot;&gt;int4 to use as the right argument of the shuffle operation.&lt;/param&gt;
        ///    /// &lt;param name=&quot;control&quot;&gt;Shuffle{2} to control shuffle to.&lt;/param&gt;
        ///    /// &lt;returns&gt;int4 result of the shuffle operation.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)] [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ShuffleOperator {
            get {
                return ResourceManager.GetString("ShuffleOperator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Shuffles the vector.&lt;/summary&gt;    
        ///    public readonly {0} {1} {{
        ///      [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///      get {{ return new {0}({2}Ext.Shuffle(value, (byte)Shuffle{3}.{4})); }}
        ///    }}
        ///.
        /// </summary>
        internal static string ShuffleReadonly {
            get {
                return ResourceManager.GetString("ShuffleReadonly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Shuffles the vector.&lt;/summary&gt;    
        ///    public {0} {1} {{
        ///      [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///      readonly get {{ return new {0}({2}Ext.Shuffle(value, (byte)Shuffle{3}.{4})); }}
        ///      [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///      set {{
        ///        this[{5}] = value[0];
        ///        this[{6}] = value[1];
        ///      }}
        ///    }}
        ///.
        /// </summary>
        internal static string ShuffleToVector2 {
            get {
                return ResourceManager.GetString("ShuffleToVector2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Shuffles the vector.&lt;/summary&gt;    
        ///    public {0} {1} {{
        ///      [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///      readonly get {{ return new {0}({2}Ext.Shuffle(value, (byte)Shuffle{3}.{4})); }}
        ///      [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///      set {{
        ///        var original = this.value[{6}];
        ///        this.value = {2}Ext.Shuffle(value.value, (byte)Shuffle{3}.{5});
        ///        ref var e0 = ref Unsafe.As&lt;{2}&lt;{8}&gt;, {8}&gt;(ref this.value);
        ///        Unsafe.Add(ref e0, {6}) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ShuffleToVector3 {
            get {
                return ResourceManager.GetString("ShuffleToVector3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    #region Sign
        ///
        ///    /// &lt;summary&gt;Returns the componentwise sign of v. 1 for positive components, 0 for zero components and -1 for negative components.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise sign of the input.&lt;/returns&gt;    
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} sign({0} v) {{ return new {0}({1}Ext.Sign(v.value)); }}
        ///
        ///    /// &lt;summary&gt;Returns the componentwise absolute value of a vector.&lt;/summary&gt;
        ///    /// &lt;p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SignMath {
            get {
                return ResourceManager.GetString("SignMath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    #region Sign
        ///
        ///    /// &lt;summary&gt;Returns the componentwise sign of m. 1 for positive components, 0 for zero components and -1 for negative components.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;m&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise sign of the input.&lt;/returns&gt;    
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} sign({0} m) {{ return new {0}(Math.sign(m.c0), Math.sign(m.c1), Math.sign(m.c2)); }}
        ///
        ///    /// &lt;summary&gt;Returns the componentwise absolute value of a  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SignMathMatrix3 {
            get {
                return ResourceManager.GetString("SignMathMatrix3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    #region Sign
        ///
        ///    /// &lt;summary&gt;Returns the componentwise sign of m. 1 for positive components, 0 for zero components and -1 for negative components.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;m&quot;&gt;Input value.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise sign of the input.&lt;/returns&gt;    
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} sign({0} m) {{ return new {0}(Math.sign(m.c0), Math.sign(m.c1), Math.sign(m.c2), Math.sign(m.c3)); }}
        ///
        ///    /// &lt;summary&gt;Returns the componentwise abs [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SignMathMatrix4 {
            get {
                return ResourceManager.GetString("SignMathMatrix4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from {2}&lt;{1}&gt;.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;{2}&lt;{1}&gt; to convert to {0}&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({2}&lt;{1}&gt; v) {{
        ///      value = v;
        ///    }}
        ///
        ///    /// &lt;summary&gt;Constructs a {0} vector from a single bool value by converting it to {1} and assigning it to every component.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;bool to convert to {0}&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public uns [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SimpleConstructorEvenVector {
            get {
                return ResourceManager.GetString("SimpleConstructorEvenVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} matrix from four {1} vectors.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;c0&quot;&gt;The matrix column c0 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;c1&quot;&gt;The matrix column c1 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;c2&quot;&gt;The matrix column c2 will be set to this value.&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({1} c0, {1} c1, {1} c2){{
        ///        this.c0 = c0;
        ///        this.c1 = c1;
        ///        this.c2 = c2;
        ///    }}
        ///
        ///    ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SimpleConstructorMatrix3 {
            get {
                return ResourceManager.GetString("SimpleConstructorMatrix3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    /// &lt;summary&gt;Constructs a {0} matrix from 16 {2} values given in row-major order.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;m00&quot;&gt;The matrix at row 0, column 0 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;m01&quot;&gt;The matrix at row 0, column 1 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;m02&quot;&gt;The matrix at row 0, column 2 will be set to this value.&lt;/param&gt;   
        ///    /// &lt;param name=&quot;m10&quot;&gt;The matrix at row 1, column 0 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;m11&quot;&gt;The matrix at ro [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SimpleConstructorMatrix3x3 {
            get {
                return ResourceManager.GetString("SimpleConstructorMatrix3x3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} matrix from four {1} vectors.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;c0&quot;&gt;The matrix column c0 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;c1&quot;&gt;The matrix column c1 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;c2&quot;&gt;The matrix column c2 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;c3&quot;&gt;The matrix column c3 will be set to this value.&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({1} c0, {1} c1, {1} c2, {1} c3){ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SimpleConstructorMatrix4 {
            get {
                return ResourceManager.GetString("SimpleConstructorMatrix4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} matrix from 16 {2} values given in row-major order.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;m00&quot;&gt;The matrix at row 0, column 0 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;m01&quot;&gt;The matrix at row 0, column 1 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;m02&quot;&gt;The matrix at row 0, column 2 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;m03&quot;&gt;The matrix at row 0, column 3 will be set to this value.&lt;/param&gt;
        ///    /// &lt;param name=&quot;m10&quot;&gt;The matrix at r [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SimpleConstructorMatrix4x4 {
            get {
                return ResourceManager.GetString("SimpleConstructorMatrix4x4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from {2}&lt;{1}&gt;.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;{2}&lt;{1}&gt; to convert to {0}&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({2}&lt;{1}&gt; v) {{
        ///      value = v;
        ///      ref var e0 = ref Unsafe.As&lt;{0}, {1}&gt;(ref this);
        ///      Unsafe.Add(ref e0, 3) = 0; // forth component should be always zero
        ///    }}
        ///
        ///    /// &lt;summary&gt;Constructs a {0} vector from a single bool value by converting it to {1} and assigning it to every component.&lt;/summar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SimpleConstructorOddVector {
            get {
                return ResourceManager.GetString("SimpleConstructorOddVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from a {0} vector.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;vector&quot;&gt;The constructed vector&apos;s components will be set to this value.&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({0} vector) {{
        ///      value = vector.value;
        ///    }}
        ///.
        /// </summary>
        internal static string SimpleConstructorVector {
            get {
                return ResourceManager.GetString("SimpleConstructorVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///		/// &lt;summary&gt;{4} converts a single {2} value to a {0} vector by {1}assigning it to every component.&lt;/summary&gt;
        ///		/// &lt;param name=&quot;v&quot;&gt;{2} to convert to {0}&lt;/param&gt;
        ///		/// &lt;returns&gt;Converted value.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {3} operator {0}({2} v) {{ return new {0}(v); }}
        ///.
        /// </summary>
        internal static string SingleToVectorOperator {
            get {
                return ResourceManager.GetString("SingleToVectorOperator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from a single {3} value by converting it to {1} and assigning it to every component.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;{3} to convert to {0}&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({3} v) {{
        ///      value = {2}.Create(({1})v);
        ///    }}
        ///.
        /// </summary>
        internal static string SingleValueConstructorEven {
            get {
                return ResourceManager.GetString("SingleValueConstructorEven", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Constructs a {0} vector from a single {3} value by converting it to {1} and assigning it to every component.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;{3} to convert to {0}&lt;/param&gt;
        ///    [MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///    public {0}({3} v) {{
        ///      var res = ({1})v;
        ///      value = {2}.Create(res, res, res, 0);
        ///    }}
        ///.
        /// </summary>
        internal static string SingleValueConstructorOdd {
            get {
                return ResourceManager.GetString("SingleValueConstructorOdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representation of the value.&lt;/returns&gt;
        ///    public readonly string ToString(string format, IFormatProvider formatProvider) {{
        ///      return string.Format(&quot;{0}({{0}}, {{1}}, {{2}},  {{3}}, {{4}}, {{5}},  {{6}}, {{7}}, {{8}})&quot;, c0.x.ToString(format, formatProvider), c1.x.ToString(format, formatProvider), c2.x.ToString(format, formatProvider), c0.y.ToString(format, formatProvider), c1.y.ToString(format, format [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StringMethodsMatrix3x3 {
            get {
                return ResourceManager.GetString("StringMethodsMatrix3x3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representation of the value.&lt;/returns&gt;
        ///    public readonly string ToString(string format, IFormatProvider formatProvider) {{
        ///      return string.Format(&quot;{0}({{0}}, {{1}}, {{2}}, {{3}},  {{4}}, {{5}}, {{6}}, {{7}},  {{8}}, {{9}}, {{10}}, {{11}},  {{12}}, {{13}}, {{14}}, {{15}})&quot;, c0.x.ToString(format, formatProvider), c1.x.ToString(format, formatProvider), c2.x.ToString(format, formatProvider), c3.x.ToStri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StringMethodsMatrix4x4 {
            get {
                return ResourceManager.GetString("StringMethodsMatrix4x4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representation of the value.&lt;/returns&gt;
        ///    public readonly string ToString(string format, IFormatProvider formatProvider) {{
        ///      return string.Format(&quot;{0}({{0}}, {{1}})&quot;, x.ToString(format, formatProvider), y.ToString(format, formatProvider));
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representation of the value.&lt;/returns&gt;
        ///    [MethodImpl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StringMethodsVector2 {
            get {
                return ResourceManager.GetString("StringMethodsVector2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representation of the value.&lt;/returns&gt;
        ///    public readonly string ToString(string format, IFormatProvider formatProvider) {{
        ///      return string.Format(&quot;{0}({{0}}, {{1}}, {{2}})&quot;, x.ToString(format, formatProvider), y.ToString(format, formatProvider), z.ToString(format, formatProvider));
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representati [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StringMethodsVector3 {
            get {
                return ResourceManager.GetString("StringMethodsVector3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/summary&gt;
        ///    /// &lt;returns&gt;String representation of the value.&lt;/returns&gt;
        ///    public readonly string ToString(string format, IFormatProvider formatProvider) {{
        ///      return string.Format(&quot;{0}({{0}}, {{1}}, {{2}}, {{3}})&quot;, x.ToString(format, formatProvider), y.ToString(format, formatProvider), z.ToString(format, formatProvider), w.ToString(format, formatProvider));
        ///    }}
        ///
        ///    /// &lt;summary&gt;Returns a string representation of the {0}.&lt;/sum [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StringMethodsVector4 {
            get {
                return ResourceManager.GetString("StringMethodsVector4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    #region Trigonometry
        ///
        ///    /// &lt;summary&gt;Returns the componentwise sine of a vector.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;Input vector containing angles in radians.&lt;/param&gt;
        ///    /// &lt;returns&gt;The componentwise sine of the input.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {0} sin({0} v) {{ return new {0}({1}Ext.Sin(v.value)); }}
        ///
        ///    /// &lt;summary&gt;Returns the componentwise cosine of a vector.&lt;/summary&gt;
        ///    /// &lt;param name=&quot;v&quot;&gt;Input vector containing angles in ra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Trigonometry {
            get {
                return ResourceManager.GetString("Trigonometry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     
        ///    /// &lt;summary&gt;Returns the {1} element at a specified index.&lt;/summary&gt;
        ///    {4} unsafe {1} this[{3} index] {{
        ///      readonly get {{
        ///  #if !DISABLE_SAFETY_CHECKS
        ///        if ((uint)index &gt;= {2})
        ///          throw new System.ArgumentException(&quot;index must be between [0...{2})&quot;);
        ///  #endif
        ///        fixed ({0}* array = &amp;this) {{ return (({1}*)array)[index]; }}
        ///      }}
        ///      set {{
        ///  #if !DISABLE_SAFETY_CHECKS
        ///        if ((uint)index &gt;= {2})
        ///          throw new System.ArgumentException(&quot;index must  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string VectorIndexer {
            get {
                return ResourceManager.GetString("VectorIndexer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///		/// &lt;summary&gt;{3} converts a {1} vector to a {0} vector by converting and assigning its value.&lt;/summary&gt;
        ///		/// &lt;param name=&quot;v&quot;&gt;{1} to convert to {0}&lt;/param&gt;
        ///		/// &lt;returns&gt;Converted value.&lt;/returns&gt;
        ///		[MethodImpl(MethodImplOptions.AggressiveInlining)]
        ///		public static {2} operator {0}({1} v) {{ return new {0}(v); }}
        ///.
        /// </summary>
        internal static string VectorToVectorOperator {
            get {
                return ResourceManager.GetString("VectorToVectorOperator", resourceCulture);
            }
        }
    }
}
